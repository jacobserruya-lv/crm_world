<aura:component implements="lightning:isUrlAddressable,flexipage:availableForAllPageTypes,lightning:actionOverride" access="global"> <!-- force:appHostable,flexipage:availableForAllPageTypes,force:hasRecordId,force:lightningQuickAction, -->

    <aura:attribute name="recordId" type="String"/>
    <aura:attribute name="sObject" type="String"/>
    <aura:attribute name="isNewQualification" type="Boolean"/>

    <aura:handler name="init" value="{!this}" action="{!c.doInit}" />

    <lightning:navigation aura:id="navService"/>
    <lightning:workspaceAPI aura:id="workspace" />
    <!--lightning:navigation aura:id="navigationService"/>
    <lightning:workspaceAPI aura:id="workspace" />
    <lightning:notificationsLibrary aura:id="notifLib"/-->

    <!--aura:attribute name="purchasedProduct" type="Object"/>
    <aura:attribute name="simplePurchasedProduct" type="Object"/>
    <aura:attribute name="purchasedProductError" type="String"/>
    <force:recordData aura:id="recordData"
                      recordId="{!v.recordId}"
                      fields="Origin__c,TransactionRMSId__c,TransactionStHFlag__c"
                      targetRecord="{!v.purchasedProduct}"
                      targetFields="{!v.simplePurchasedProduct}"
                      targetError="{!v.purchasedProductError}"
                      recordUpdated="{!c.handleRecordUpdated}"
                      /-->

    <div style="background-color: white;padding: .5rem;">
        <lightning:flow aura:id="flowData" onstatuschange="{!c.handleStatusChange}" />
    </div>

</aura:component>