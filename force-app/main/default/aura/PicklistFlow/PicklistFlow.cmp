<aura:component controller="ICX_CaseQualificationLC" implements="lightning:availableForFlowScreens" access="global">
	
    <aura:attribute name="visual" type="String" default="" description="Visual choice: 'Picklist' / 'Picker' " />

    <aura:attribute name="label" type="String" default="" />
    <aura:attribute name="required" type="Boolean" default="false" description="Required field" />
    <aura:attribute name="showLabel" type="Boolean" default="true" />
    <aura:attribute name="showLabelInEmptyValue" type="Boolean" default="false" />
    <aura:attribute name="selectedValue" type="String" />
    <aura:attribute name="selectedLabel" type="String" />
    <!--lightning:quickActionAPI aura:id="quickActionAPI" /-->

    <aura:attribute name="picklists" type="Object" description="List of qualification ICX_PicklistValuesParser" />
    <aura:attribute name="recordTypeId" type="String" description="Record Type Id of the object to get values for a field based on a record type. Note: see Supported object for UI-API (Task or LiveChatTranscript is not supported)" />
    <aura:attribute name="picklistFieldValues" type="Object" access="public" description="Qualification list with dependant picklists"/>
    <aura:attribute name="hierarchyDependantFields" type="List" access="public" description="Full parent hierarchy of the dependant picklists (ex : ['Category__c', 'SubCategory__c', 'SubSubCategory__c']"/>

    <!-- For field picklist -->
    <aura:attribute name="object" type="String" default="" description="Object name (filter based on record type is not working on Task or LiveChatTranscript)" />
    <aura:attribute name="field" type="String" default="" description="Field API name" />

    <!-- For Dependent picklist -->
    <aura:attribute name="controllingField" type="String" default="" description="Dependent Picklist: Controlling Field: Type (Nature) > Category__c" />
    <aura:attribute name="controllingValue" type="String" default="" description="Dependent Picklist: Controlling value to filter on the dependent values" />

    <!-- For list of values (if no dependent picklist nor field picklist) -->
    <aura:attribute name="valueList" type="List" access="public" description="values of the picklist" default="[]"/>
    <aura:attribute name="noResult" type="Boolean" access="public" description="Get no result for auto-next?" />

    <!-- For list of values (if no dependent picklist nor field picklist) -->
    <!--EX: c:PicklistFlow apiList="fra, ita" labelList="FRANCE, ITALIA" visual="Picker"/-->    
    <aura:attribute name="apiList" type="String" description="API string for a list" />
    <aura:attribute name="labelList" type="String" description="Label string for a list" />

    <aura:attribute name="flowAutoNextOnSelection" type="Boolean" default="false" description="For Flow only, after selection, go to the NEXT screen automatically" />
    <aura:attribute name="flowAutoBackOnSelection" type="Boolean" description="For Flow only, on Previous on the next screen, go to the PREVIOUS screen automatically" />

    <!--aura:attribute name="dependentItemMap" type="Map" access="private" description="Map[controlling value, List[dependent value]]"/-->

    <aura:handler name="init" value="{!this}" action="{!c.onInit}"/>
    <aura:handler name="onPickerSelected" event="c:ICX_VisualPickerEvent" action="{!c.handleSelection}"/>
    <aura:handler name="change" value="{!v.picklistFieldValues}" action="{!c.onPicklistFieldValuesChanged}"/>

    <c:ICX_PicklistDataService aura:id="picklistService"/>

    <!-- selection of the visual picker by event -->
    <c:ICX_VisualPicker itemList="{!v.valueList}" label="{!v.label}" selection="{!v.selectedValue}" selectionLabel="{!v.selectedLabel}" visual="{!v.visual}" required="{!v.required}"
                        showLabelInEmptyValue="{!v.showLabelInEmptyValue}" showLabel="{!v.showLabel}"/>
</aura:component>