<apex:page id="UploadFilePage" docType="html-5.0" sidebar="false" showHeader="false">

    <apex:slds />

    <script src="/soap/ajax/35.0/connection.js" type="text/javascript"></script> 
    <script src="/soap/ajax/35.0/apex.js" type="text/javascript"></script> 
    <script type="text/javascript"> 
        sforce.connection.sessionId = '{!$Api.Session_ID}'; 
    </script> 
    <script>
        
        //Receive message from LC
        window.addEventListener("message", function(event) {
            data = event.data;

            if(typeof(event.data.uploadFile) != 'undefined' && (event.data.uploadFile == true)){
                document.getElementById('uploadFileButton').click();
            }
        }, false);

        var lexOrigin = 'https://{!$CurrentPage.parameters.lcHost}';
        //Send message to LC
        function sendToLC(message) {
            if(typeof(lexOrigin) != 'undefined'){
                parent.postMessage(message, lexOrigin);
            }
        }

        sendToLC({'state':'LOADED', 'vfHost': "{!LEFT($CurrentPage.URL,FIND('/',$CurrentPage.URL,9))}"});
    </script>
    <script type="text/javascript">
        function uploadAttachmentFromVisualForcePage() {
            
            var lexOrigin = 'https://{!$CurrentPage.parameters.lcHost}';// Lightning source page
        //     window.addEventListener("message", function(event) {
        //     data = event.data;
        //     console.log("Event data :" + JSON.stringify(data));

        //     if(typeof(event.data.uploadFile) != 'undefined' && (event.data.uploadFile == true)){
        //         document.getElementById('uploadFileButton').click();
        //     }
        // }, false);

            var reader = new FileReader();
            var attachFile = document.getElementById('fileSelectedForUpload').files[0];
            if (attachFile == undefined) {
                alert('Please select a file');
                return;
            }
            if (attachFile.size > 26214400) { //Where 26214400 is byte equivalent of 25MB
                alert('{!$Label.SPO_Upload_file_size_error_msg}');
            }
            reader.onload = function(e) {
                var attachment = new sforce.SObject('Attachment');
                attachment.Name = attachFile.name;
                attachment.IsPrivate = false;
                attachment.ContentType = attachFile.type;
                attachment.Body = (new sforce.Base64Binary(e.target.result)).toString();;
                attachment.Description = attachFile.name;
                attachment.ParentId = data.productId; /*'recordID'*/
                //alert('ID is '+data.productId);
                var result = sforce.connection.create([attachment]);
                console.log("file Id created :" + JSON.stringify(result));
                if (result[0].getBoolean("success")) {
                    //alert('file uploaded successfully');
                    var file = document.getElementById("fileSelectedForUpload").value.replace(/\\/g, '/').replace(/.*\//, '');
                    console.log("file value :" + file); 
                    var message = {
                        'state': 'fileUploadprocessed',
                        "uploadFile" : true,
                        "file" : file,
                        "fileId": result[0].id,
                        "attachmentCategory" : "{!$CurrentPage.parameters.attachmentCategory}"
                    } ;

                    parent.postMessage(message, lexOrigin);

                    document.getElementById("fileSelectedForUpload").value = null ;
                } else {
                    alert('something went wrong.');
                }
            };
            reader.readAsBinaryString(attachFile);
        }   
    </script>

    <!--<style type="text/css">
        div.tooltip {
    width: 195px;
    float: left;
  }
  div.tooltip:hover {
    background: #ffffff;
    text-decoration: none;
  } /*BG color is a must for IE6*/
  div.tooltip span {
    display: none;
    padding: 2px 3px;
    margin-left: 8px;
    width: 195px;
  }
  div.tooltip:hover span {
    display: inline-block;
    position: inherit;
    border: 1px solid #cccccc;
    background: #FFC;;
    color: #000000;
     margin-left: 60px;
  }
    </style> -->

    <!-- <div    class="tooltip" 
            style="display: block;">
        <span>This is the message</span> -->

    <form  id="theForm">
            <input  type="file"  
                    id="fileSelectedForUpload" 
                    onChange="sendToLC({'state': 'uploadFileSelected', 'attachmentCategory': '{!$CurrentPage.parameters.attachmentCategory}'});" 
                    label="abcd"/>
            <input  type="button" 
                    value="Upload" 
                    id="uploadFileButton" 
                    style="display:none;"
                    onClick="uploadAttachmentFromVisualForcePage();"/>

        
        <!--div class="slds-file-selector slds-file-selector_files">
            <div class="slds-file-selector__dropzone">
                <input type="file" 
                       class="slds-file-selector__input slds-assistive-text"
                       id="fileSelectedForUpload" 
                       onChange="sendToLC({'state': 'uploadFileSelected', 'attachmentCategory': '{!$CurrentPage.parameters.attachmentCategory}'});uploadAttachmentFromVisualForcePage();"
                       label="abcd"/>
                <label class="slds-file-selector__body" for="fileSelectedForUpload" id="file-selector-secondary-label">
                    <span class="slds-file-selector__button slds-button slds-button_neutral">
                        Select a file
                    </span>
                </label>
            </div>
            <input  type="button" 
                   value="Upload" 
                   id="uploadFileButton" 
                   style="display:none;"
                   onClick="uploadAttachmentFromVisualForcePage();" />
        </div-->        
        
                   
    </form>
    
   <!-- </div> -->

    <!--<apex:pageBlock rendered="{!fileUploadProcessed == true}" id="theBlock">
        <script>
            //Hide pageBlock as we just need it to run <script>
            var theBlock = document.getElementById('{!$Component.theBlock}');
            theBlock.style.border = 'none';
            theBlock.style.display = 'none';

            //Send file uploaded message
            sendToLC({'state': 'fileUploadprocessed', 'message': '{!message}', 'messageType': '{!messageType}'});
        </script>
    </apex:pageBlock>-->

</apex:page>