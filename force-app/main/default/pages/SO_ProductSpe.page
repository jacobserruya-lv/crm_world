<apex:page showheader="false" standardstylesheets="false" sidebar="false"
           cache="false" applyhtmltag="false" doctype="html-5.0"
           standardcontroller="Opportunity"
           extensions="SO_ProductSpe_CTRL">

    <apex:composition template="SO_Template">
        <apex:define name="headTag">
            <div id="blockui">
                <div class="blockUI blockOverlay" style="z-index: 1000; border: none; margin: 0px; padding: 0px; width: 100%; height: 100%; top: 0px; left: 0px; opacity: 0.3; cursor: wait; position: fixed; background-color: rgb(240, 240, 240);"></div>
                <div class="blockUI blockMsg blockPage" style="z-index: 1011; position: fixed; padding: 8px; margin: 0px; width: 300px; top: 40%; left: 35%; text-align: center; color: rgb(0, 0, 0); cursor: wait; border-radius: 10px; opacity: 0.5; background-color: transparent;">
                    <!-- <div style="width: 141px; height: 100px; margin: 0 auto; margin-right: 0; border-radius: 50px; border: solid 4px grey; line-height: 100px; text-align: center; background-color: white; font-weight: 700;"> -->
                        <!-- {!$Label.LV_SO_Loading} -->
                    <!-- </div> -->
                </div>
            </div>
            <script type="text/javascript">
                $(function(){                   
                    setTimeout(function(){
                        $('#blockui').fadeOut('slow');
                        unblockUI();
                    }, 1000);                    
                });

                
               
                var __sfdcSessionId = '{!GETSESSIONID()}';
            </script>

            <script src="../../soap/ajax/35.0/connection.js" type="text/javascript"></script>

            <title>Product specifications</title>
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.SO_Resources,'css/magnific-popup.min.css')}" /> 
            <script type="text/javascript" src="{!URLFOR($Resource.SO_Resources,'js/jquery.magnific-popup.min.js')}"></script>
            <script type="text/javascript" src="{!URLFOR($Resource.SO_Resources,'js/PRTL_New_Attachment.js')}"></script>
            <style type="text/css">
                .control-label-adv {
                    color:#2b141;
                }
                .colorBox {
                    width:50px;
                    height:50px;
                    float:left;
                    margin:4px;
                    display: inline-block;
                    cursor:pointer;
                }
                .otherText {
                    border: 1px black solid;
                }
                .mfp-img {
                    transition: -webkit-transform 0.25s ease !important;
                }

                .mfp-img:hover {
                    -ms-transform: scale(2)  !important; /* IE 9 */
                    -webkit-transform: scale(2)  !important; /* Safari */
                    transform: scale(2)  !important; /* Standard syntax */
                }
                .padding-left5 {
                    padding-left: 5px;
                }

                .tooltip-inner {
                    max-width: 450px;
                    /* If max-width does not work, try using width instead */
                    width: 450px; 
                }
            </style>
        </apex:define>
        <apex:define name="bodyContent">

            <apex:form styleclass="form-horizontal" id="pageForm">
                
                <apex:outputPanel id="errorMessages">
                    <apex:outputPanel rendered="{!showMessageOnTop}">
                        <div class="alert alert-danger" role="alert">
                            <apex:messages />
                        </div>
                    </apex:outputPanel>

                    <section id="messages">
                        <div id="fillFieldsError"/>
                        <div id="paintingMessages"/>
                        <div id="exoMessages"/>
                    </section>
                </apex:outputPanel>


                <div class="panel panel-default">
                    <div class="panel-heading">
                        <div class="row">
                            <div class="col-sm-7 col-md-8 col-xs-4 panel-title">
                               {!concatenateTitle}<!-- {!$Label.LV_SO_PRODUCT_SPE_PRODUCT_SPECIFICATIONS} -->
                            </div>
                            <!--Tamirw -->
                            <div class="col-sm-5 col-md-offset-1 col-md-3 col-xs-8 " style="text-align:right;">
                                
                                        <apex:outputPanel layout="inline" rendered="{!quotationContainer.oneOpportunity.SPO_OpportunityCloning__c}" style="margin-right: 20px;"> 
                                            <label id="cloningLabel" class="control-label" >{!$ObjectType.Opportunity.fields.SPO_OpportunityCloning__c.Label}</label>
                                            <apex:outputField value="{!quotationContainer.oneOpportunity.SPO_OpportunityCloning__c}" />
                                        </apex:outputPanel>
                                        
                                        <apex:outputPanel id="NoPersonNeededId" layout="inline"
                                          rendered="{!OR(AND(OR (quotationContainer.oneOpportunity.SPO_ProductCategory__c == oppWatch, quotationContainer.oneOpportunity.SPO_ProductCategory__c == oppAccessory), watch_SpoMto), AND(NOT(AND(quotationContainer.oneOpportunity.SPO_ProductCategory__c == oppLeatherGood, leatherGood_Creation)),NOT(AND(quotationContainer.oneOpportunity.SPO_ProductCategory__c == oppAccessory, accessory_Creation))))}">
                                            <label class="control-label" >{!$ObjectType.Opportunity.fields.SPO_NoPersonNeeded__c.Label}</label>
                                            <label style="vertical-align: text-top;">
                                                <apex:outputPanel rendered="{!OR(contains('Brief in progress;Creation in progress;In progress;Payment confirmed',contr.quotationContainer.oneOpportunity.StageName), $Profile.Name == 'SPO_Production')}">
                                                    <apex:inputCheckbox styleClass="noPersonNeeded" id="noPersoNeededId" 
                                                                value="{!quotationContainer.oneOpportunity.SPO_NoPersonNeeded__c}" 
                                                                onclick="blockUI();clearFields();" >
                                                    </apex:inputCheckbox>
                                                </apex:outputPanel>
                                               <!-- <apex:outputPanel rendered="{! !contains('Brief in progress;Creation in progress;In progress;Payment confirmed;',contr.quotationContainer.oneOpportunity.StageName)}"> -->
                                               <apex:outputPanel rendered="{!AND(NOT(contains('Brief in progress;Creation in progress;In progress;Payment confirmed;',contr.quotationContainer.oneOpportunity.StageName)), NOT($Profile.Name == 'SPO_Production'))}">
                                                    <apex:inputCheckbox styleClass="noPersonNeeded" disabled="true" html-c-cancelMode="cancelMode" id="ROnoPersoNeededId" 
                                                                value="{!quotationContainer.oneOpportunity.SPO_NoPersonNeeded__c}" 
                                                                >
                                                    </apex:inputCheckbox>                                                </apex:outputPanel>
                                                <apex:actionFunction action="{!clearOppFields}" 
                                                    reRender="materialsAndColors,hardsidedOrSoft,personalizations,errorMessages" 
                                                    name="clearFields" 
                                                    oncomplete="initAllPicklists();
                                                    noPersonNeededClick($('[id$=noPersoNeededId]')[0], false, $('[id$=noPersoNeededId]').prop('checked'));unblockUI();">
                                                <apex:param name="exo" value=""/>
                                                </apex:actionFunction>
            
                                            </label>
                                        </apex:outputPanel>
                                </div>
                            <!--End -->
        
                                
                           </div>
                    </div>
                    <div class="panel-body">
                        <div class="panel panel-info">
                            <div class="panel-body" id="productSpecComponentsId">
                                <apex:outputPanel id="productSpecComponentsPanelId" layout="none">
                                    <!-- Description table -->
                                    <c:SO_ProductSpe_Section_Description contr="{!contr}"/>
                                    
                                    <!-- Material & Colors table -->
                                    <c:SO_ProductSpe_Section_MaterialAndColors contr="{!contr}" />
                                    <apex:actionFunction immediate="true" action="{!updateExo}" reRender="exoField_a,exoField_b" name="updateExo" oncomplete="onCompleteUpdateExo('{!quotationContainer.oneOpportunity.SPO_Exo__c}' == 'Yes', {!leatherGood_HarsidedOutOfMyPerso})">
                                        <apex:param name="exo" value=""/>
                                    </apex:actionFunction>

                                    <!-- Personalization table -->
                                    <c:SO_ProductSpe_Section_Personalization contr="{!contr}" rendered="{!quotationContainer.oneOpportunity.SPO_ProductCategory__c != oppWatch}" />

                                    <!-- Commertial local comment table -->
                                    <c:SO_ProductSpe_Section_Comment contr="{!contr}"/>
                                    
                                    <!-- File Attachment table -->
                                    <apex:outputPanel id="uploadFileSection" >
                                        <c:SO_Page_Section_FileAttachment data="{!quotationContainer}" deleteEvent="deleteAttachment"/>
                                    </apex:outputPanel>
                                    <!-- Changes history table -->
                                    <c:SO_ProductSpe_Section_ChangesHistory contr="{!contr}" />

    <!--  -->
                                    <div>
                                        <apex:inputtextarea rows="5" styleclass="seeTranslation form-control hidden" />
                                    </div>
                                </apex:outputPanel>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="margin-left margin-right">
                    <!-- <input id="cancelBrief" type="button" value="{!$Label.LV_SO_PRODUCT_cancel_brief}" class="btn btn-warning" /> -->
                    <a href="#cancel_brief_dialog" id="openCancelBrief" type="button" class="btn btn-warning" style="{!IF(hasCancelButton, '', 'display: none;')}">{! $Label.LV_SO_PRODUCT_cancel_brief }</a>

                    <input type="button" id="backToClientId" class="btn btn-default margin-left" value="{!$Label.LV_SO_BackToClient}" onclick="blockUI(); backToClientActionFunc();"/>
                    <apex:actionFunction name="backToClientActionFunc" action="{!backToClient}" oncomplete="unblockUI();" immediate="true"/>

                    <!-- <apex:commandButton value="{!$Label.LV_SO_BackToClient}" styleClass="btn btn-default margin-left" action="{!backToClient}" immediate="true"/> -->

                    <apex:outputLink value="{!URLFOR('/apex/SO_ProductSearch?bid=' + $CurrentPage.parameters.id)}" styleClass="btn btn-default margin-left" rendered="{! !theSessionState.isProductReady}">
                        {!$Label.LV_SO_Back_To_Product_Search}

                    </apex:outputLink>
                    
                    <div class="pull-right">
                        <input type="button" id="cleanButtonId" class="btn btn-default" value="{!$Label.LV_SO_PRODUCT_SPE_CLEAN}" onclick="if (!confirm('{! JSENCODE($Label.LV_SO_Are_you_shure_you_want_to_reset_the_form) }')) return false; else{blockUI(); cleanButton(); return true;}"/>
                        <apex:actionFunction name="cleanButton" action="{!cleanButton}" reRender="productSpecComponentsPanelId, NoPersonNeededId,errorMessages" oncomplete="readyInit(); unblockUI();"/>

                        <apex:outputPanel id="translationButton">
                            <input type="button" id="translationBtn" class="btn btn-default margin-left" value="{!$Label.LV_SO_show_translation}" onclick="toggleHiddenClass()"/>

                        </apex:outputPanel>

                        <apex:commandButton value="{!$Label.LV_SO_PRODUCT_SPE_save_and_next}" styleClass="btn btn-success pull-right margin-left" action="{!saveAndNext}" onclick="blockUI(); if(!formValidate()) {unblockUI(); return false;}" reRender="errorMessages" oncomplete="unblockUI();"/>

                        <apex:actionFunction name="refreshAttachmentSection" action="{!refreshAttachmentList}" reRender="uploadFileSection"
                                             immediate="true" oncomplete="initProductPopup();"/>

                        <apex:actionFunction name="removeAttachment" action="{!removeAttachment}" reRender="uploadFileSection" 
                                             immediate="true" oncomplete="initProductPopup();">
                            <apex:param name="attId" assignTo="{!toRemoveAttId}" value="" />
                        </apex:actionFunction>

                        <apex:actionFunction name="addFormAttachment" action="{!addFormAttachment}" reRender="uploadFileSection" 
                                             immediate="true" oncomplete="initProductPopup();">

                            <apex:param name="selectValue" assignTo="{!selectValuePainting}" value="" />
                        </apex:actionFunction>                        

                    </div>
                </div>
            </apex:form>
        </apex:define>
        <apex:define name="footerScripts">

            <script type="text/javascript">
                
                var blockUIOptions = 
                {         
                    message: '<img src="https://cdnjs.cloudflare.com/ajax/libs/semantic-ui/0.16.1/images/loader-small-inverted.gif" />',
                    overlayCSS: 
                    {
                        backgroundColor: 'black',
                        cursor: 'wait'
                    },
                    css: 
                    {
                        border: 'border:solid 1px #a0a0a0',
                        padding: '8px',
                        backgroundColor: 'transparent',
                        '-webkit-border-radius': '10px',
                        '-moz-border-radius': '10px',
                        opacity: .5,
                        color: '#000'
                    }
                };

                $(window).load(ready);
                function ready(){
                    blockUI();
                    readyInit();
                }

                function readyInit()
                {                   
                    showTranslation = false;

                    dependentCTRL.init('Opportunity');

                    // For all roles
                    initAllPicklists();

                    $('.SPO_SizeUnit_InputFieldDropDownClick[value=""]').remove();

                    // Check for exo value
                    checkExo();

                    // Check painting
                    if ('{!Opportunity.SPO_PaintingYN__c}' == 'Yes') picklistCTRL.init('SPO_Patch_InputField', '', '', 'true');

                    onCompleteColors()
                    //initialization of events for field SPO_Painting__c in component SO_ProductSpe_Section_Personalization 
                    paintingAttachment();

                    //by pass dependent picklist limits:
                    // if(document.getElementById('SPO_LiningInteriorColor2Hidden') != null)
                    // {
                    //     generatePicklistByControllingField('Opportunity', 
                    //     'SPO_ProductCategory__c', 'SPO_LiningInteriorColor2__c', 
                    //     '{!Opportunity.RecordType.Name}', 'SPO_LiningInteriorColor2Hidden', 
                    //     'SPO_LiningInteriorColor2_InputFieldId', 'SPO_ProductCategory_InputFieldId',
                    //     SPO_LiningInteriorColor2_Change, true, 'sfPicklist', '{!$Label.LV_SO_None}');
                    // }
                    
                    // SPO_LiningInteriorMaterial1_InputFieldId
                    if( $('[id$="SPO_LiningInteriorMaterial1_InputFieldId"]').size() != 0
                        && $('[id$="SPO_LiningInteriorMaterial1_InputFieldId"]').val() != decodeURI('_%01_')
                        && $('[id$="SPO_LiningInteriorMaterial1_InputFieldId"]').val() != '' )
                    {
                        generatePicklistByControllingField('Opportunity', 
                            'SPO_LiningInteriorMaterial1__c', 'SPO_LiningInteriorColor1__c', 
                            '{!Opportunity.RecordType.Name}', 'SPO_LiningInteriorColor1Hidden', 
                            'SPO_LiningInteriorColor1_InputFieldId', 'SPO_LiningInteriorMaterial1_InputFieldId',
                            SPO_LiningInteriorColor1_Change, {!Opportunity.SPO_NoPersonNeeded__c}, 'sfPicklist', '{!$Label.LV_SO_None}');
                    }

                    // SPO_LiningInteriorMaterial2_InputFieldId
                    if( $('[id$="SPO_LiningInteriorMaterial2_InputFieldId"]').size() != 0 
                        && $('[id$="SPO_LiningInteriorMaterial2_InputFieldId"]').val() != decodeURI('_%01_') 
                        && $('[id$="SPO_LiningInteriorMaterial2_InputFieldId"]').val() != '' )
                    {
                        generatePicklistByControllingField('Opportunity', 
                            'SPO_LiningInteriorMaterial2__c', 'SPO_LiningInteriorColor2__c', 
                            '{!Opportunity.RecordType.Name}', 'SPO_LiningInteriorColor2Hidden', 
                            'SPO_LiningInteriorColor2_InputFieldId', 'SPO_LiningInteriorMaterial2_InputFieldId',
                            SPO_LiningInteriorColor2_Change, false, 'sfPicklist', '{!$Label.LV_SO_None}');
                    }

                    // init requrired fields
                    initFormValidation();

                    noPersonNeededClick(null, true, {!Opportunity.SPO_NoPersonNeeded__c});

                    checkStatus();
                    initCheckForRubberClick();
                    if($('[id*=openCancelBrief]').size() > 0){
                        popUpCancellationReason();
                    }
                    // init tooltips of sections
                    $('[data-toggle="tooltip"]').tooltip();

                    // setDisabledPicklistButtons();
                    setLiningMaterialPicklistsDefaultValue({!hasQuotation}, {!Opportunity.SPO_NoPersonNeeded__c});

                    var commentIsValideForThisStage = {!NOT(CONTAINS('In progress;Payment confirmed;Closed Won;Cancelled by store;Cancelled by Production', Opportunity.StageName))};
                    setZoneCommentForOtherUser('{!baseRole}', commentIsValideForThisStage);
                }

                function setLiningMaterialPicklistsDefaultValue(hasQuotation, noPersonNeeded)
                {
                    if(!hasQuotation 
                        && $('[id$="SPO_LiningInteriorMaterial1_InputFieldId"]').size() != 0
                        && $('[id$="SPO_LiningInteriorMaterial1_InputFieldId"]').val() != decodeURI('_%01_')
                        && $('[id$="SPO_LiningInteriorMaterial1_InputFieldId"]').val() != '')
                    {
                        var val = $('[id$="SPO_LiningInteriorMaterial1_InputFieldId"]').val();
                        //$('#SPO_LiningInteriorMaterial1_InputFieldDropDownId a[value = "' + val + '"]').click();
                        // liningInteriorMaterial1OnComplete(noPersonNeeded);
                        $('#SPO_LiningInteriorMaterial1_InputFieldButtonId').attr('disabled', 'true');
                    }
                }

                function setDisabledPicklistButtons()
                {
                    [
                        "SPO_ExteriorMaterial1_InputFieldButtonId"
                        ,"SPO_ExteriorMaterialColor1_ButtonIdWithColor"
                        ,"SPO_ExteriorMaterialColor1_ButtonId"
                        ,"SPO_ExteriorMaterial2_InputFieldButtonId"
                        ,"SPO_ExteriorMaterialColor2_ButtonIdWithColor"
                        ,"SPO_ExteriorMaterialColor2_ButtonId"
                        ,"SPO_ExteriorMaterial3_InputFieldButtonId"
                        ,"SPO_ExteriorMaterialColor3_ButtonIdWithColor"
                        ,"SPO_ExteriorMaterialColor3_ButtonId"
                        ,"SPO_LiningInteriorMaterial1_InputFieldButtonId"
                        //,"SPO_LiningInteriorColor1Button"
                        ,"SPO_LiningInteriorColor1_ButtonIdWithColor"
                        ,"SPO_LiningInteriorColor1_ButtonId"
                        ,"SPO_LiningInteriorMaterial2_InputFieldButtonId"
                        //,"SPO_LiningInteriorColor2Button"
                        ,"SPO_LiningInteriorColor2_ButtonIdWithColor"
                        ,"SPO_LiningInteriorColor2_ButtonId"
                    ].forEach(function(elem, index)
                    {
                        var selectId = 'SPO_' + elem.split('_')[1] + '_InputFieldId';
                        var buttonId = "#" + elem;
                        // || $('[id$="' + selectId + '"] option[value = "__"]').size() == 1
                        if( $('[id$="' + selectId + '"]').size() == 0
                            || $('[id$="' + selectId + '"] option[value != ""]').size() == 0 
                            || $('[id$="' + selectId + '"] option[value != "' + decodeURI('_%01_') + '"]').size() == 0)
                        {
                            $(buttonId).attr('disabled','')
                        }
                    });
                }

                function oncompletePatchFields(){
                    picklistCTRL.init('SPO_Patch_InputField', '', '', 'true');
                }

                function initAllPicklists(){
                    // For all roles
                    picklistCTRL.init('SPO_ProductCategory_InputField', '', '', '');
                    
                    picklistCTRL.init('SPO_CreationType_InputField', '', 'true', 'true');
                    picklistCTRL.init('SPO_Exo_InputField', '', '', '');
                    picklistCTRL.init('SPO_OrderType_InputField', '', '', '');
                    picklistCTRL.init('SPO_Painting_InputField', '', '', '');

                    picklistCTRL.init('SPO_PaintingYN_InputField', '', 'true', '');
                    picklistCTRL.init('SPO_ClientAccessoriesRequested_InputField', '', 'true', '');
                    picklistCTRL.init('SPO_SizeUnit_InputField', '', '', '');
                    picklistCTRL.init('SPO_Lock_InputField', '', 'true', '');
                    
                    // If Watch/Accessory
                    picklistCTRL.init('SPO_StrapMaterial_InputField', '', 'true', 'true');
                    // picklistCTRL.init('SPO_BeltSize_InputField', '', '', 'true');
                   
                    picklistCTRL.init('SPO_ColorMetalicparts_InputField', '', 'true', 'true'); 

                    picklistCTRL.init('SPO_StopBriefReason', '', '', '');

                }

                // function resetFrom()
                // {
                //     clearDisabledControls();
                //     $('.comments').find('input:text, textarea').val('');
                // }

                function noPersonNeededClick(e, onready, noPersonNeeded) 
                {
                    onCompleteMaterialsOfCreationType(noPersonNeeded);

                    var tagTypes = ['input','textarea','button','select'];
                    var notRequired = (!!e && e.checked) || (onready && noPersonNeeded);
                    if (notRequired){
                        
                        if($('[id$=SPO_CreationType_InputFieldId]').size() > 0)
                        {
                            $('[id$=SPO_CreationType_InputFieldId]').attr('data-rule-required', false);
                            $('[id$=SPO_CreationType_InputFieldId]').data('rule-required', false);
                            $('[id$=SPO_CreationType_InputFieldId]').attr('disabled', '');
                            $('#SPO_CreationType_InputFieldButtonId').attr('disabled', '');
                        }

                        $.each(tagTypes, function(k,tag){
                            $('.personalization '+tag).attr('disabled','')
                            $('.materialAndColors '+tag).attr('disabled','');
                            if(tag=='button')
                                $('.materialAndColors '+tag).addClass('readonly-dropdown');  
                        });
                        
                        $(".select2-input").attr('readonly', 'readonly');
                                         
                        //remove from checkbox for user can click again
                        $('.noPersonNeeded[c-cancelMode!=cancelMode]').removeAttr('disabled');

                        //picklistCTRL.init("SPO_LiningInteriorMaterial2_InputField", "", "true", "");
                        //clearDisabledControls();
                        modifyChooseColorsForReadOnly();

                    } else {
                        $.each(tagTypes, function(k,tag){
                            $('.personalization '+tag).removeAttr('disabled');
                            $('.materialAndColors '+tag).removeAttr('disabled');
                            if(tag=='button')
                                $('.materialAndColors '+tag).removeClass('readonly-dropdown');  

                            if($('[id$=SPO_CreationType_InputFieldId]').size() > 0)
                            {
                                if($('[id$=SPO_OrderType_InputFieldId]').val() != '{!orderTypeMtoOnCatalog}')
                                {
                                    $('[id$=SPO_CreationType_InputFieldId]').attr('data-rule-required', true);
                                    $('[id$=SPO_CreationType_InputFieldId]').data('rule-required', true);
                                    $('[id$=SPO_CreationType_InputFieldId]').removeAttr('disabled');
                                    $('#SPO_CreationType_InputFieldButtonId').removeAttr('disabled');
                                }
                                else
                                {
                                    $('[id$=SPO_CreationType_InputFieldId]').attr('data-rule-required', false);
                                    $('[id$=SPO_CreationType_InputFieldId]').data('rule-required', false);
                                    $('[id$=SPO_CreationType_InputFieldId]').attr('disabled', '');
                                    $('#SPO_CreationType_InputFieldButtonId').attr('disabled', '');
                                }

                            }
                            if($('[id$=SPO_StrapColor_ButtonId]').size() > 0){
                                $('[id$=SPO_StrapColor_ButtonId]').attr('disabled', '');
                            }
                        });
                       
                        $(".select2-input").removeAttr('readonly');


                    }

                    removeAddRequired(!notRequired);
                    setDisabledPicklistButtons();
                }

                
                function clearDisabledControls() {
                     //empty select controls
                    $(".materialAndColors .form-group input[type='text'], .personalization .form-group input[type='text']").val("");
                    $(".materialAndColors .form-group textarea, .personalization .form-group textarea").val("");
                    $(".materialAndColors .open-popup-link button, .personalization .open-popup-link button").html("{!$Label.LV_SO_Choose_Color}");
                    $(".materialAndColors .open-popup-link button, .personalization .open-popup-link button")
                      .parent().parent().children("div").children("span").children("select")
                      .children("option:selected")
                      .each(function() { 
                        $(this).removeAttr("selected"); 
                    });

                    $(".materialAndColors .form-group .dropdown-menu a[value=''], .personalization .form-group .dropdown-menu a[value='']").click();
                    $(".panel-description .changeable .dropdown-menu a[value='']").click();
                       
                       
                    if ($('div.select2-container').length>0)            
                        $(".select2-container").select2("val", "");                                    
                
                }

                function generatePicklistByControllingField(objName, ctrlFieldName, depFieldName, recordTypeName, parentIdToAppend, selectInputId, ctrlFieldId, actionFunc, isRequired, styleClass, noneLabel)
                {
                    var currentParentTag = document.getElementById(parentIdToAppend);
                    var dependentOptionsAns = dependentCTRL.getDependentOptionsByRecordTypeName(ctrlFieldName, depFieldName, recordTypeName)//getDependentOptionsByRecordTypeName(objName, ctrlFieldName, depFieldName, recordTypeName);
                    
                    var span = document.createElement('span');
                    var select = document.createElement('select');
                    select.id = selectInputId;
                    select.name = selectInputId;
                    select.className = styleClass;

                    if(isRequired)
                    {
                        select.dataset['ruleRequired'] = true;
                    }

                    $(select).change(function()
                    {
                        actionFunc($(this).val());
                    });
                    
                    var parentKey = $('[id$=' + ctrlFieldId + '] option:selected').val() 
                                    + '::' + $('[id$=' + ctrlFieldId + '] option:selected').text();
                    var optionsList = dependentOptionsAns[parentKey];
                    //<option value="">--None--</option>
                    if(noneLabel != '')
                    {
                        var noneOption = document.createElement('option');
                        noneOption.value = '';
                        noneOption.text  = noneLabel;
                        select.appendChild(noneOption);
                    }

                    for(var i = 0; i < optionsList.length; ++i)
                    {
                        var option = document.createElement('option');
                        option.value = optionsList[i].Value;
                        option.text  = optionsList[i].Label;
                        select.appendChild(option);
                    }
                    span.appendChild(select);
                    currentParentTag.appendChild(span);
                }

                function toggleHiddenClass(refresh) {
                    // Change translation
                    if (!refresh)
                        showTranslation = !showTranslation;

                    if (showTranslation){
                        $('.translated-field').removeClass("hidden");
                        $('#translationBtn').val('{!$Label.LV_SO_Hide_Translation}');
                    }else{
                        $('.translated-field').addClass("hidden");
                        $('#translationBtn').val('{!$Label.LV_SO_Show_translation}');
                    }
                }

                function initProductPopup(){
                    // 1. Upload file
                    // 2. Pick a color
                    $('.open-popup-link').magnificPopup({
                      type:'inline',
                      midClick: true,
                      showCloseBtn : false, // allow opening popup on middle mouse click. Always set it to true if you don't provide alternative source.
                      callbacks:{
                        open: function(){
                            // init top 'x' to close the modal
                            $('.glyphicon-remove').click(function(){
                                $.magnificPopup.close();
                            });

                            // init colors click events
                            $('.colorBox').click(function(e){
                                updatePicklistValue(e);
                            });
                        },
                        close: function(){
                            $('#open_product .panel-heading #popup-title').empty();
                            $('#open_product .dynamicContent').empty();
                        }
                      }
                    });
                        
                    // Image popup
                    initImgPopup();
                }

                function initImgPopup() {
                   $('.image-popup-link').magnificPopup({
                        type:'inline',
                        midClick: true,
                        showCloseBtn : false,
                        type: 'image'
                    }); 
                }

                function changeSizeUnit(){
                    picklistCTRL.init('sizeUnitToRerender', '', '', '');
                }

              
                function onCompleteMaterialsOfCreationType(noPersonNeeded) {
                    switchControls();
                    checkExo();

                    // if(document.getElementById('SPO_LiningInteriorColor1Hidden') != null && document.getElementById('SPO_LiningInteriorColor1_InputFieldId') == null)
                    // {
                    //     generatePicklistByControllingField('Opportunity', 
                    //     'SPO_ProductCategory__c', 'SPO_LiningInteriorColor1__c', 
                    //     '{!Opportunity.RecordType.Name}', 'SPO_LiningInteriorColor1Hidden', 
                    //     'SPO_LiningInteriorColor1_InputFieldId', 'SPO_ProductCategory_InputFieldId',
                    //     SPO_LiningInteriorColor1_Change, ((!!noPersonNeeded || !noPersonNeeded) && ($('[id$=SPO_LiningInteriorColor1_InputFieldButtonId]').text().indexOf('{!$Label.LV_SO_Choose_Color}')>-1)), 'sfPicklist', '{!$Label.LV_SO_None}');
                    // }

                    initProductPopup();
                }

                function switchControls() {
                    var notRequired = false;
                    
                    if($(".noPersonNeeded").size() > 0)
                    {
                        notRequired = $(".noPersonNeeded")[0].checked == true;                        
                    }

                    var required = !notRequired;

                    [
                        "SPO_ExteriorMaterial1_InputField"
                        ,"SPO_ExteriorMaterial2_InputField"
                        ,"SPO_ExteriorMaterial3_InputField"
                        ,"SPO_LiningInteriorMaterial1_InputField"
                        ,"SPO_LiningInteriorMaterial2_InputField"
                    ].forEach(function(elem, index){

                        var id = "#" + elem + "ButtonId";

                        picklistCTRL.init(elem, '', 'true', '' + required);

                        if(notRequired) {
                            $(id).attr('disabled','disabled');
                        }
                        else {
                            $(id).removeAttr('disabled');
                        }

                    });

                    removeAddRequired(required); 
                    


                }

                function removeAddRequired(required) 
                {

                    if(required) 
                    {
                        $(".personalization .form-group, .materialAndColors .form-group, .panel-description .changeable").each(function(index, elem) 
                        { 
                            $(this).hasClass("no-required") ? $(this).removeClass("no-required").addClass("required") : false;     
                        });
                        $('[id$=SPO_WristSize_InputFieldId]').attr("aria-required","true").attr("data-rule-required","true");
                        $('[id$=SPO_WristSize_InputFieldId]').data('rule-required', true);
                        
                    }
                    else {
                        $(".personalization .form-group, .materialAndColors .form-group, .panel-description .changeable").each(function(index, elem) 
                        { 

                            $(this).hasClass("required") ? $(this).removeClass("required").addClass("no-required") : false;     
                        });
                        
                        if ('{!Opportunity.SPO_ProductCategory__c}'== '{!oppWatch}')
                        {
                              $('[id$=SPO_WristSize_InputFieldId]').removeAttr("aria-required").removeAttr("aria-invalid").removeAttr("data-rule-required");                    
                        }

                    }
                }

                function updateExt1AfterAddColorBtn(){
                    picklistCTRL.init('SPO_ExteriorMaterial1_InputField', '', 'true', '');
                    initProductPopup();
                }

                function updateExt2AfterAddColorBtn(){
                    picklistCTRL.init('SPO_ExteriorMaterial2_InputField', '', 'true', '');
                    initProductPopup();
                }

                function updateExt3AfterAddColorBtn(){
                    picklistCTRL.init('SPO_ExteriorMaterial3_InputField', '', 'true', '');
                    initProductPopup();
                }

                function updateLining2AfterAddColorBtn(){
                    // if(document.getElementById('SPO_LiningInteriorColor2Hidden') != null)
                    // {
                    //     generatePicklistByControllingField('Opportunity', 
                    //         'SPO_ProductCategory__c', 'SPO_LiningInteriorColor2__c', 
                    //         '{!Opportunity.RecordType.Name}', 'SPO_LiningInteriorColor2Hidden', 
                    //         'SPO_LiningInteriorColor2_InputFieldId', 'SPO_ProductCategory_InputFieldId',
                    //         SPO_LiningInteriorColor2_Change, false, 'sfPicklist', '{!$Label.LV_SO_None}');   
                    // }

                    var required = true;
                    if($('.noPersonNeeded').size() > 0)
                    {
                        required = !($('.noPersonNeeded')[0].checked == true);
                    }

                    picklistCTRL.init('SPO_LiningInteriorMaterial2_InputField', '', 'true', '' + required);


                    initProductPopup();
                }

                function SPO_StrapMaterial_InputFieldreRenderfunction()
                {
                    $('#SPO_StrapColor_ButtonIdWithColor').block(blockUIOptions);
                    SPO_StrapMaterial_InputFieldreRenderfunction1();
                }

                function updateStrapMaterialAfterAddColor(){
                    //picklistCTRL.init('SPO_StrapMaterial_InputField', '', 'true', '');
                    var hasColor = retColorStringList('SPO_StrapColor_InputFieldId');
                    if (hasColor==false){
                        $('[id$=SPO_StrapColor_ButtonIdWithColor]').attr('disabled','');
                    }
                    if($('[id$=SPO_StrapMaterial_InputFieldId]').val() != '')
                    {
                        $('[id$=SPO_StrapColor_InputFieldId]').attr('data-rule-required', true);
                        $('[id$=SPO_StrapColor_InputFieldId]').data('rule-required', true);
                    }
                    else
                    {
                        $('[id$=SPO_StrapColor_InputFieldId]').attr('data-rule-required', false);
                        $('[id$=SPO_StrapColor_InputFieldId]').data('rule-required', false);
                    }
                    initProductPopup();
                    checkExo();
                    $('#SPO_StrapColor_ButtonIdWithColor').unblock();
                }

                function SPO_ExteriorMaterial1_InputFieldreRenderfunction()
                {
                    $('#SPO_ExteriorMaterialColor1_ButtonIdWithColor').block(blockUIOptions);
                    SPO_ExteriorMaterial1_InputFieldreRenderfunction1();
                }

                function exteriorMaterial1OnComplete()
                {
                    var hasColor = retColorStringList('SPO_ExteriorMaterialColor1_InputFieldId');
                    if (hasColor==false){
                        $('[id$=SPO_ExteriorMaterialColor1_ButtonIdWithColor]').attr('disabled','');
                    }

                    initProductPopup();
                    checkExo();
                    $('#SPO_ExteriorMaterialColor1_ButtonIdWithColor').unblock()
                }

                function SPO_ExteriorMaterial2_InputFieldreRenderfunction()
                {
                    $('#SPO_ExteriorMaterialColor2_ButtonIdWithColor').block(blockUIOptions);
                    SPO_ExteriorMaterial2_InputFieldreRenderfunction1();
                }

                function exteriorMaterial2OnComplete()
                {
                    var hasColor = retColorStringList('SPO_ExteriorMaterialColor2_InputFieldId');
                    if (hasColor==false){
                        $('[id$=SPO_ExteriorMaterialColor2_ButtonIdWithColor]').attr('disabled','');
                    }

                    initProductPopup();
                    checkExo();
                    $('#SPO_ExteriorMaterialColor2_ButtonIdWithColor').unblock();
                }

                function SPO_ExteriorMaterial3_InputFieldreRenderfunction()
                {
                    $('#SPO_ExteriorMaterialColor3_ButtonIdWithColor').block(blockUIOptions);
                    SPO_ExteriorMaterial3_InputFieldreRenderfunction1();
                }

                function exteriorMaterial3OnComplete()
                {
                    var hasColor = retColorStringList('SPO_ExteriorMaterialColor3_InputFieldId');
                    if (hasColor==false){
                        $('[id$=SPO_ExteriorMaterialColor3_ButtonIdWithColor]').attr('disabled','');
                    }

                    initProductPopup();
                    checkExo();
                    $('#SPO_ExteriorMaterialColor3_ButtonIdWithColor').unblock();
                }

                function SPO_LiningInteriorMaterial1_InputFieldreRenderfunction()
                {
                    $('#SPO_LiningInteriorColor1_ButtonIdWithColor').block(blockUIOptions);
                    SPO_LiningInteriorMaterial1_InputFieldreRenderfunction1();
                }

                function liningInteriorMaterial1OnComplete(noPersonNeeded)
                {
                    generatePicklistByControllingField('Opportunity', 
                        'SPO_LiningInteriorMaterial1__c', 'SPO_LiningInteriorColor1__c', 
                        '{!Opportunity.RecordType.Name}', 'SPO_LiningInteriorColor1Hidden', 
                        'SPO_LiningInteriorColor1_InputFieldId', 'SPO_LiningInteriorMaterial1_InputFieldId',
                        SPO_LiningInteriorColor1_Change, ((!!noPersonNeeded || !noPersonNeeded) && ($('[id$=SPO_LiningInteriorColor1_ButtonIdWithColor]').text().indexOf('{!$Label.LV_SO_Choose_Color}')>-1)), 'sfPicklist', '{!$Label.LV_SO_None}');

                    var hasColor = retColorStringList('SPO_LiningInteriorColor1_InputFieldId');
                    if (hasColor==false){
                        $('[id$=SPO_LiningInteriorColor1_ButtonIdWithColor]').attr('disabled','');
                    }

                    initProductPopup();
                    checkExo();
                    $('#SPO_LiningInteriorColor1_ButtonIdWithColor').unblock();
                }

                function SPO_LiningInteriorMaterial2_InputFieldreRenderfunction()
                {
                    $('#SPO_LiningInteriorColor2_ButtonIdWithColor').block(blockUIOptions);
                    SPO_LiningInteriorMaterial2_InputFieldreRenderfunction1();
                }

                function liningInteriorMaterial2OnComplete()
                {
                    generatePicklistByControllingField('Opportunity', 
                        'SPO_LiningInteriorMaterial2__c', 'SPO_LiningInteriorColor2__c', 
                        '{!Opportunity.RecordType.Name}', 'SPO_LiningInteriorColor2Hidden', 
                        'SPO_LiningInteriorColor2_InputFieldId', 'SPO_LiningInteriorMaterial2_InputFieldId',
                        SPO_LiningInteriorColor2_Change, false, 'sfPicklist', '{!$Label.LV_SO_None}');

                    var hasColor = retColorStringList('SPO_LiningInteriorColor2_InputFieldId');
                    if (hasColor==false){
                        $('[id$=SPO_LiningInteriorColor2_ButtonIdWithColor]').attr('disabled','');
                    }

                    initProductPopup();
                    checkExo();
                    $('#SPO_LiningInteriorColor2_ButtonIdWithColor').unblock();
                }

                function onCompleteColors() {    // For translation btn
                    initProductPopup();
                }


                function onCompleteAddColor(){
                    initProductPopup();
                    $('.colorBox').click(function(e){
                        updatePicklistValue(e);
                    });
                }

                $(function(){
                    initProductPopup();
                });

                function checkExo(){
                    var exo;
                    exo='No';
                    $('.colorPL select option:selected').each(function(item, ele){
                        if($(ele).val().toUpperCase().indexOf('EXO') > -1)
                        {
                            exo='Yes';
                            // $('#messages #exoMessages').html('<div class="alert alert-danger" role="alert">{!$Label.LV_SO_exo_Error_message}</div>');
                            return false;
                        }else{
                            $('#messages #exoMessages').html('');
                        }
                    });
                    updateExo(exo);
                }

                function onCompleteUpdateExo(exo, isLGWithHarsided)
                {
                    picklistCTRL.init('SPO_Exo_InputField', '', '', '');
                    showMessageInCaseLGWithHarsidedAndExo(exo, isLGWithHarsided);
                }

                function showMessageInCaseLGWithHarsidedAndExo(exo, isLGWithHarsided)
                {
                    if(exo == true && isLGWithHarsided == true)
                    {
                        $('#messages #exoMessages').html('<div class="alert alert-danger" role="alert">{!$Label.LV_SO_exo_Error_message}</div>');
                    }
                }

                function retColorStringList(plId){
                    // Build list of all color names from this PL and send them to remote action
                    var colorStringList = [];
                    $('[id$='+plId+'] > option ').each(function() {
                        colorStringList.push(this.text);    // include the exo
                    });
                    
                    if (colorStringList.length == 1)
                        return false;
                    return true;
                }

                function fillWithColors(e, t, plId)
                {
                    if($('#' + t.id).data()['blockUI.isBlocked'] == 1)
                    {
                        e.stopImmediatePropagation();
                        return false;
                    }
                    
                    // Build list of all color names from this PL and send them to remote action
                    var colorStringList = [];
                    $('[id$='+plId+'] > option ').each(function() 
                    {
                        colorStringList.push(this.text);    // include the exo
                    });

                    // Clean Modal
                    $('#open_product .dynamicContent').empty();

                    $('#open_product .dynamicContent').block(blockUIOptions);

                    /* Remote Action from class */
                    SO_ProductSpe_CTRL.getColorsRgbHexMapByNames(colorStringList,  function(result, event)
                    {
                        if(event.status)
                        {                            
                            var jsonData = [];
                            if(result != '') 
                            {
                                jsonData = JSON.parse(result);
                                // Set title
                                $('#open_product .panel-heading #popup-title').html('Select a color:');

                                /* Insert data to modal */
                                for(var i in jsonData) 
                                {
                                    if (i != 'remove')
                                    {                          
                                        var newItem = $('<div>');
                                        newItem.addClass('colorBox');
                                        
                                        /* Text */
                                        // save in tag data-colorObjName and valueInPicklist
                                        newItem[0].dataset['valueInPicklist'] = jsonData[i].valueInPicklist;
                                        newItem[0].dataset['toggle'] = 'tooltip';
                                        newItem.attr('title', jsonData[i].valueInPicklist);
                                        // Text to show (if there is 'exo' in the name - remove it)
                                        if (!!jsonData[i].colorCode)
                                        {     // if color code not null
                                            newItem.css('background','#'+jsonData[i].colorCode);
                                        }
                                        else if (!!jsonData[i].colorImage) 
                                        {
                                            var imageSrc = jsonData[i].colorImage;
                                            newItem.css({ 
                                                           'background'      : 'url("'+imageSrc+'") no-repeat'
                                                          ,'background-size' : 'cover'
                                                        });
                                            
                                        }
                                        else 
                                        { // Put Transparent
                                            newItem.css('background-color','transparent');
                                        }
                                        
                                        // Add bootstrap hirrarchy
                                        var col = $('<div>');
                                        col.append(newItem);
                                        $('#open_product .dynamicContent').append(col);
                                    }
                                }

                                /* Insert 'Other (free text)' manualy */
                                if ($.inArray('{!$Label.LV_SO_Other_free_text}', colorStringList) > -1) 
                                {
                                    var newItem = $('<div>');
                                    newItem.text('{!$Label.LV_SO_OtherColor}'); // changed to other
                                    newItem.addClass('colorBox');
                                    newItem.addClass('otherText');
                                    newItem.css('background','transparent');
                                    newItem[0].dataset['colorObjName'] = '{!$Label.LV_SO_Other_free_text}';
                                    newItem[0].dataset['valueInPicklist'] = '{!$Label.LV_SO_Other_free_text}';
                                    newItem[0].dataset['toggle'] = 'tooltip';
                                    newItem.attr('title', '{!$Label.LV_SO_Other_free_text}');
                                    // Add bootstrap hirrarchy
                                    var col = $('<div>');
                                    col.append(newItem);
                                    $('#open_product .dynamicContent').append(col);
                                }  

                                $('[data-toggle="tooltip"]').tooltip();

                                /* Color click event listener */
                                $('.colorBox').click(function(e)
                                {
                                    updatePicklistValue(e);
                                });
                            }
                        }
                        $('#open_product .dynamicContent').unblock();
                    },{escape:false});
                    
                    function updatePicklistValue(e)
                    {
                        //debugger;
                        // Change the selected item in the PL and execute 'onchange' trigger
                        var valueInPicklist = e.target.dataset['valueInPicklist'];

                        $('[id$='+plId+']').val(valueInPicklist);
                        $('[id$='+plId+']').change();

                        // Change button text
                        var colorObjName = e.target.dataset['originalTitle'];
                        if (e.target.style.background.indexOf('url(') >-1)
                        {
                            // picture
                            var colorHolder = $("<span>").css(
                                                        {
                                                            "background-size": "cover"
                                                            ,"width":"14px"
                                                            ,"height":"14px"
                                                            ,"display":"inline-block"
                                                            ,"margin-top":"2px"
                                                            ,"margin-bottom":"-2px"
                                                            ,"background" : e.target.style.background
                                                        });
                           
                           t.innerHTML =  colorHolder[0].outerHTML + '&nbsp;' + colorObjName;
                        }
                        else if(e.target.style.backgroundColor != 'transparent')
                        {
                            // color RGB
                            t.innerHTML = '<span class="glyphicon glyphicon-stop" style="color:'+e.target.style.backgroundColor+'"></span>&nbsp;'+colorObjName;
                        }
                        else
                        {
                            t.innerHTML = colorObjName;
                        }

                        // Close the popup
                        $.magnificPopup.close();
                        // Clean Modal
                        $('#open_product .dynamicContent').empty();
                        //debugger;
                    }
                }
                


                
                var errorMsgessageNoFile    = 'Please choose file and try again';//'Please choose file and try again';
                var errorMsgProbelmWithFile = ' There is a problem with the file';//' There is a problem with the file';

                function fillWithBrowseFile(){
                    // Set title
                    $('#open_product .panel-heading #popup-title').html('Attach a file:');
                    // Clean Modal
                    $('#open_product .dynamicContent').empty();

                    /* Insert 'Other (free text)' manualy */
                    var importFileSection = $('<section>');
                    var inputFile = $('<input id="file" type="file" name="file" class="upload" accept="doc, txt, pdf, png, jpeg, jpg, gif, docx, xlsx"/>');                
                    var uploadBtn = $('<input type="button" class="btn btn-success" value="Upload File" onclick="uploadFile(\'{!$CurrentPage.parameters.id}\', \'\')" />');
                    importFileSection.append(inputFile);
                    importFileSection.append(uploadBtn);

                    // Add bootstrap hirrarchy
                    // var col = $('<div>');
                    // col.append(newItem);
                    // col.addClass('col-md-2');
                    $('#open_product .dynamicContent').append(importFileSection);
                    
                    
                    // Close the popup
                    //$.magnificPopup.close();
                }

                function uploadFile(oppId, returnURL){
                    PRTL_New_Attachment.uploadFile(oppId, returnURL, refreshAttachmentSection); 
                    $.magnificPopup.close();
                }

                function startLoading(){
                    $.blockUI({ message: '<h1><img src="http://docs.huihoo.com/pentaho/biserver-manual-deployments-build-information/4.5.0/pentaho-solutions/system/pentaho-cdf/resources/style/images/busy.gif" />{!$Label.LV_SO_Uploading_file_message}</h1>' });
                }
                function endLoading(){
                    $.unblockUI();
                }
          
                function deleteAttachment(name, id) {

                    var msg = "{!$Label.SO_LV_Confirm_Delete_Image}" + " " + name;
                    if(confirm(msg)) {
                       removeAttachment(id);
                    }
                }

                function paintingAttachment() {
                    $("[class*='SPO_Painting_InputField']").each(function(index, element){
                        $(this).click(function(elem) { 
                            // Show message
                            checkPaintingVal(this.text);

                            if(0 != index) {
                                addFormAttachment(index);
                            }
                        });
                    });
                }
                function checkPaintingVal(paintingVal){
                    if (!!paintingVal){
                        if (paintingVal.indexOf('{!$Label.LV_SO_Heritage}')>-1){     
                            $('#messages #paintingMessages').html('<div class="alert alert-warning" role="alert">{!$Label.LV_SO_Fill_up_the_form_Heritage}</div>');

                        }else if (paintingVal.indexOf('{!$Label.LV_SO_Travel_icons}')>-1){   
                            $('#messages #paintingMessages').html('<div class="alert alert-warning" role="alert">{!$Label.LV_SO_Fill_up_the_form_Travel_icons}</div>');

                        }else if (paintingVal.indexOf('{!$Label.LV_SO_Sur_mesure}')>-1){
                            $('#messages #paintingMessages').html('<div class="alert alert-warning" role="alert">{!$Label.LV_SO_Fill_up_the_form_Sure_mesure}</div>');

                        }else if (paintingVal.indexOf('{!$Label.LV_SO_None}')>-1){
                            $('#messages #paintingMessages').html('');
                        }
                    }else {
                        $('#messages #paintingMessages').html('');
                    }
                }
                function checkStatus()
                {
                    var isReadonlyMode = {!isReadonlyMode};
                    var oneOfClosedStage = false;
                    var closedStatus = ['Quotation rejected', 'Payment confirmed', 'Closed Won', 'Cancelled by store', 'Cancelled by Production'];
                    if (jQuery.inArray( '{!Opportunity.StageName}', closedStatus ) >-1 && {!(contains('Store;Production',role))} ) {
                        oneOfClosedStage = true;
                    }
                    if ( isReadonlyMode || oneOfClosedStage )
                    {
                        setAllReadonly();
                        removeAddRequired(!isReadonlyMode);
                    }
                }

                function setZoneCommentForOtherUser(baseRole, isValideForThisStage)
                {
                    if(baseRole == 'Other' && isValideForThisStage)
                    {
                        $('.form-group.comment input').removeAttr('disabled');
                    }
                }

                function setAllReadonly(){
                    // addColorBtnExt3 addColorBtnExt2 addColorBtnExt removeColorBtnExt removeColorBtnLining2 addColorBtnLining2
                    var tagTypes = ['input','button'];
                    // Set all the fields to read only  
                    $.each(tagTypes, function(k,tag)
                    {
                        $('form .panel .panel-info ' + tag).attr('disabled','');
                    });
                    $('[id$="uploadFileSection"] button').removeAttr('disabled');
                    modifyChooseColorsForReadOnly();
                    $('[id$=addColorBtnExt3]').hide();
                    $('[id$=addColorBtnExt2]').hide();
                    $('[id$=addColorBtnExt]').hide();
                    $('[id$=removeColorBtnExt]').hide();
                    $('[id$=removeColorBtnLining2]').hide();
                    $('[id$=addColorBtnLining2]').hide();
                }

                function modifyChooseColorsForReadOnly()
                {
                    $('.chooseColor').each(function()
                    {
                        if($(this).text() && $(this).text().trim() == '{!$Label.LV_SO_Choose_Color}')
                        {
                            $(this).text('{!$Label.LV_SO_None}');
                        }
                    });
                }

                function initFormValidation(){
                    $('[id$=pageForm]').validate();
                }
                function formValidate(){
                     var isValid = $('[id$=pageForm]').valid();
                     if (isValid){
                         showFillFieldsError(false);
                     }else{
                         showFillFieldsError(true);
                     }
                     return isValid;
                }

                function initCheckForRubberClick(){
                    $('[id$=SPO_WristSize_InputFieldId]').data("value",'{!opportunity.SPO_StrapMaterial__c}'); 
                    if ('{!Opportunity.SPO_ProductCategory__c}'== '{!oppWatch}'){
                        $('#SPO_StrapMaterial_InputFieldDropDownId li').click( function(){
                            if (this.textContent=='RUBBER'){
                                $('[id$=SPO_WristSize_InputFieldId]').val('{!$Label.LV_SO_StandardSize}');
                                $('[id$=SPO_WristSize_InputFieldId]').prop('disabled', true);
                            }else{
                                if ($('[id$=SPO_WristSize_InputFieldId]').data("value")=="RUBBER"){
                                    $('[id$=SPO_WristSize_InputFieldId]').val('');
                                    $('[id$=SPO_WristSize_InputFieldId]').prop('disabled', false);
                                }
                            }
                            $('[id$=SPO_WristSize_InputFieldId]').data("value", this.textContent);  
                        });
                    }
                }
                    
            </script>
        </apex:define>
    </apex:composition>
</apex:page>