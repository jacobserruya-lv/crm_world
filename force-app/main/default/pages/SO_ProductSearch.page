<apex:page showheader="false" standardstylesheets="false" sidebar="false"
           cache="false" applyhtmltag="false" doctype="html-5.0"
           controller="SO_ProductSearch_CTRL" action="{!initialLoadingSearch}" >

    <apex:composition template="SO_Template">
        <apex:define name="headTag">
            <title>{!$Label.LV_SO_Product_Search}</title>
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.SO_Resources,'css/tooltipster.css')}" />
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.SO_Resources,'css/tooltipster-light.css')}" />
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.SO_Resources,'css/magnific-popup.min.css')}" />

            <script type="text/javascript" src="{!URLFOR($Resource.SO_Resources,'js/jquery.tooltipster.min.js')}"/>
            <script type="text/javascript" src="{!URLFOR($Resource.SO_Resources,'js/jquery.magnific-popup.min.js')}"/>

        </apex:define>

        <apex:define name="bodyContent">

            <c:SO_ProductSearch_Popup onshowpopupfunctionname="onModalPopupShow" />

            <div class="row">
                <div class="col-md-12">

                    <apex:form id="searchForm">

                        <apex:outputPanel rendered="{!showMessageOnTop}">
                            <div class="alert alert-danger" role="alert">
                                <apex:messages id="messagesId"/>
                            </div>
                        </apex:outputPanel>
                        <section id="messages">
                            <div id="fillFieldsError"/>
                        </section>

                        <apex:outputpanel layout="block" styleclass="panel panel-default" id="filter">
                            <div class="panel-heading">
                                <h3>
                                    <span role="button" data-toggle="collapse" href="#filterPanel"
                                          aria-expanded="true" aria-controls="filterPanel">
                                        <span class="caret caret-lg"></span>
                                        {!UPPER($Label.LV_SO_Search_Product_Title)}
                                    </span>
                                </h3>
                            </div>

                            <div class="panel-body collapse in" id="filterPanel" aria-expanded="true">
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-horizontal">

                                            <div class="form-group required">
                                                <label class="col-sm-4 control-label">{!$ObjectType.Opportunity.fields.SPO_ProductCategory__c.Label}</label>
                                                <div class="col-sm-6">
                                                    <c:SO_BootstrapDropDownEnhanced required="true" selectFieldUniqueName="SPO_ProductCategory_InputField" readonly="{!theSessionState.displayOrder}" >
                                                         <apex:inputField id="SPO_ProductCategory_InputFieldId" value="{!entryOpportunity.SPO_ProductCategory__c}"/>
                                                    </c:SO_BootstrapDropDownEnhanced>
                                                    <apex:actionFunction name="SPO_ProductCategory_InputFieldreRenderfunction" 
                                                        action="{!setDefaultValuesForOrderType}" 
                                                        reRender="OrderType_PanelId" 
                                                        oncomplete="onCompleteChildePicklists();"/>

                                                    <div id="prorCatHolder" style="display:none;">
                                                        <apex:inputField id="PRORCategory_InputFieldId" value="{!entryProdReferential.ProductCategory__c}"/>
                                                        <span id="prodCatDependencyJSON">{!prodCatDependencyJSON}</span>
                                                    </div>
                                                </div>
                                            </div>

                                        </div>
                                    </div>

                                    <div class="col-md-4">
                                        <div class="form-horizontal">

                                            <div class="form-group required">
                                                <label class="col-sm-4 control-label">{!$ObjectType.Opportunity.fields.SPO_OrderType__c.Label}</label>
                                                <div class="col-sm-6">
                                                    <apex:outputPanel layout="none" id="OrderType_PanelId">
                                                        <c:SO_BootstrapDropDownEnhanced selectFieldUniqueName="OrderType_InputField" required="true">
                                                             <apex:inputField id="OrderType_InputFieldId" value="{!entryOpportunity.SPO_OrderType__c}"/>
                                                        </c:SO_BootstrapDropDownEnhanced>
                                                    </apex:outputPanel>
                                                </div>
                                            </div>

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-horizontal">
                                            <div class="form-group required">
                                                <label class="col-sm-4 control-label">{!$Label.LV_SO_Product} {!$Label.LV_SO_Search_Product}</label>
                                                <div class="col-sm-6">
                                                    <apex:inputText id="NameOrSKU_InputFieldId" styleclass="form-control" value="{!nameOrSKU}" html-data-rule-required="true"/>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="pull-right">

                                            <apex:outputPanel layout="none"  rendered="{!searchAvailable}">
                                            
                                                <input type="button" class="btn btn-default" onclick="clearOnClick()" 
                                                       value="{!$Label.LV_SO_PRODUCT_SPE_CLEAN}"/>
                                                <apex:actionFunction name="clearAction" action="{!clear}" rerender="searchForm" oncomplete="clearOnComplete();" immediate="true"/>
                                            
                                                <input type="button" class="btn btn-success margin-left" onclick="formValidate();" value="{!$Label.LV_SO_Search_Product}"/>
                                                <apex:actionFunction name="searchFunction" action="{!search}" rerender="productNotFound, messagesId"  oncomplete="refreshTable();"/>
                                            </apex:outputPanel>

                                        </div>
                                    </div>
                                </div>
                            </div>

                        </apex:outputpanel>
                        <div class="panel panel-default margin-top-lg">
                            <div class="panel-heading">
                                <h3>{!$Label.LV_SO_Results}</h3>
                            </div>
                            <apex:outputpanel layout="block" styleclass="form-content no-padding" id="resultTable">
                                <c:SO_BootstrapTable instance="{!contr}"
                                                     id="ProductsList"
                                                     oncomplete="initControls"
                                                     onstart="blockUI"
                                                     refreshtable="refreshTable"
                                                     pagerposition="top"
                                                     pagesize="5"
                                                     maxbuttonscount="5"
                                                     styleclass="table table-striped table-hover"
                                                     headertext="Displaying {!startRow}-{!endRow} of {!totalRows} matching results"
                                                     visible="{!showTable}" 
                                                     isSearch="{!isSearch}"/>
                            </apex:outputpanel>
                        </div>

                        <apex:outputPanel id="productNotFound">
                            <section>
                            
                                <a href="" onclick="window.history.back();" class="btn btn-default">
                                    {!$Label.LV_SO_Back}
                                </a>

                                <apex:outputLink styleClass="btn btn-default pull-right" id="productNotFoundButtonId" style="{!IF(AND(isShowProductNotFound, productNotFoundId != ''), '', 'display:none;')}" rendered="{!productNotFoundId != ''}"
                                                 value="javascript:void(0);" onclick="updateBriefAndRedirectToProductSpecFunc('{!productNotFoundId}')">
                                    {!$Label.LV_SO_Product_not_found}
                                </apex:outputLink>

                            </section>
                        </apex:outputPanel>

                        <apex:actionFunction name="updateBriefAndRedirectToProductSpecFunc" action="{!updateBriefAndRedirectToProductSpec}" reRender="searchForm" oncomplete="unblockUI();">
                            <apex:param name="selectedProductRef" value="" assignTo="{!selectedProductRef}"/>
                        </apex:actionFunction>
                        
                    </apex:form>
                </div>
            </div>
        </apex:define>
        <apex:define name="footerScripts">
            <script type="text/javascript">
                
                var producReftId = null;

                function initControls(){
                    $.unblockUI();
                    $('img.popup-image').tooltipster({
                        theme: 'tooltipster-light',
                        contentAsHTML: true
                    });
                    initProductPopup();
                }

                function onModalPopupShow(id, popupObj){
                    
                    var targetId = "#"+producReftId + " .img-rounded";
                    $('#col-md-7 .img-rounded').attr("src", $(targetId).attr("src"));

                    var imgList = [];
                    targetId = "#"+producReftId + " .img-thumbnail";
                    $(targetId).each(function(){
                        imgList.push($(this).attr("src"));
                    });

                    $('#col-md-7 .img-thumbnail').each(function(index, element){
                        $(this).attr("src", imgList[index]);
                    });

                    var descId = "#" + producReftId + "_p";
                    $("#descriptionHolder").html($(descId).html());
                    var titleId = "#" + producReftId + "_Name";
                    $("#titleHolder").html($(titleId).text());

                }

                function selectProdRef() {
                    $('.mfp-content .panel-heading i.glyphicon-remove').click();
                    blockUI();
                    updateBriefAndRedirectToProductSpecFunc(producReftId);
                }

                function onSelectProdRef(prodRefId) {
                    blockUI();
                    updateBriefAndRedirectToProductSpecFunc(prodRefId);
                }
               
                function clearOnClick()
                {
                    blockUI();
                    $('[id$=searchForm]').find('input[type=text], textarea').val('');
                    clearAction();
                }

                function clearOnComplete()
                {
                    $('[id$=resultTable]').removeClass('hidden'); 
                    unblockUI(); 
                    initPage();
                    ready();
                    refreshTable();
                }

                // $(document).ready(function(){
                $(window).load(function () {

                    initControls();

                    $('#col-md-7 .img-thumbnail').click(function(){
                        var headImg = $('#col-md-7 .img-rounded');
                        var headSrc = headImg.attr("src");
                        headImg.attr("src", $(this).attr("src"));
                        $(this).attr("src", headSrc);
                    }); 

                    ready();
                    prodCatDependency();
                });
              
                function OrderType_InputFieldreRenderfunction()
                {
                    if($('[id$=productNotFoundButtonId]').size() > 0)
                    {
                        //'Leather goods'
                        if($('[id$=SPO_ProductCategory_InputFieldId]').val() == '{!oppLeatherGood}'
                            && $('[id$=OrderType_InputFieldId]').val() == "{!orderTypeSpecialOrder}")
                        {
                            $('[id$=productNotFoundButtonId]').show();
                        }
                        else{
                            $('[id$=productNotFoundButtonId]').hide();
                        }
                    }
                }
              
                function ready()
                {
                    // Init blank values instead of --none--
                    $('select[id$=SPO_ProductCategory_InputFieldId] :first-child').html('&nbsp;');
                    $('select[id$=OrderType_InputFieldId] :first-child').html('&nbsp;');

                    // Init picklist
                    picklistCTRL.init('SPO_ProductCategory_InputField', '', 'true', 'true');
                    picklistCTRL.init('OrderType_InputField', '', 'true', 'true');

                    // init form validation

                    initFormValidation();
                    if($('[id$="SPO_ProductCategory_InputFieldId"]').val() != ''
                        && $('[id$="OrderType_InputFieldId"]').val() != ''
                        && $('[id$="NameOrSKU_InputFieldId"]').val() != '')
                    {
                        formValidate();
                    }
                    
                    $('[id$="searchForm"]').keypress(function (e) {
                        if(e.which == 13) {
                            formValidate();
                            return false;
                        }
                    });
                }
    


                function onCompleteChildePicklists()
                {
                    $('select[id$=OrderType_InputFieldId] :first-child').html('&nbsp;');
                    picklistCTRL.init('OrderType_InputField', '', 'true', 'true');
                    OrderType_InputFieldreRenderfunction();
                }
                
                function initFormValidation(){
                    var form = $('[id$="searchForm"]');
                    form.validate();
                }

                function formValidate(){
                    var form = $('[id$="searchForm"]');
                    if(form.valid())
                    {
                        blockUI();
                        searchFunction();
                        showFillFieldsError(false);
                    }else{
                        showFillFieldsError(true);
                    }
                }

                function prodCatDependency() {

                    var prodCatDependencyMap = JSON.parse($("#prodCatDependencyJSON").html());
                    var prorMap = {};

                    $("#prorCatHolder option").each(function(){

                        var prorVal = $(this).val();
                        var prorLabel = $(this).html();

                        prorMap[prorVal] = prorLabel;
                    });
                        

                    $("#SPO_ProductCategory_InputFieldDropDownId a").each(function() {

                        var oppVal = $(this).attr("value");
                        
                        if(oppVal) {
                            var prorVal = prodCatDependencyMap[oppVal];

                            if(prorVal) {

                                var prorLabel = prorMap[prorVal];

                                if(prorLabel) {
                                    $(this).html(prorLabel);
                                }
                            }
                        }
                    }); 

                }
            </script>
        </apex:define>

    </apex:composition>

</apex:page>