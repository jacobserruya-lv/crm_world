<apex:component controller="SO_BootstrapTable_CTRL">

    <!--    @description             Component to display generic tables including paging/sorting
	-->

    <apex:attribute type="Integer" name="maxButtonsCount" description="the maximum amount of paging buttons" assignTo="{!paging_buttons_max_count}" default="10" />
    <apex:attribute type="Integer" name="pageSize" description="the page size (rows per page)" assignTo="{!list_size}" default="20" />
    <apex:attribute type="String" name="Id" description="unique id of the table (used for table Id tag also)" assignTo="{!table_id}" default="table" />
    <apex:attribute type="SO_ITablePagination_INTERFACE" name="instance" description="the instance of Interface" assignTo="{!paginator}"  />
    <apex:attribute type="String" name="pagerPosition" description="the position of pager (top/bottom/both)" default="both"  />
    <apex:attribute type="String" name="onComplete" description="the client side name of ajax complete function" default="onTableComplete"  />
    <apex:attribute type="String" name="onStart" description="the client side name of ajax start function" default="onTableStart"  />
    <apex:attribute type="String" name="refreshTable" description="the name of function that runs refresh table frm client side" default="refreshTable"  />
    <apex:attribute type="String" name="styleClass" description="the class of the table" default="table table-striped table-hover"  />
    <apex:attribute type="String" name="headerText" description="the text to insert into thead section of the table"   />
    <apex:attribute type="String" name="footerText" description="the text to insert into tfoot section of the table"   />
    <apex:attribute type="Boolean" name="visible" description="is table visible" default="true" assignTo="{!showIt}"  />
    <apex:attribute type="Boolean" name="isFirstTimeSearch" description="true if the search button was clicked at least once" default="false"/>
    <apex:attribute type="Boolean" name="isSearch" description="true if the search button was clicked" default="false"/>

    <script>
        window.{!onComplete} = window.{!onComplete} || function {!onComplete}(){};
        window.{!onStart} = window.{!onStart} || function {!onStart}(){};
    </script>



    <apex:variable value="{!init}" var="init" rendered="{!NOT(initialized)}" /> 

    <apex:outputpanel id="table_panel" >
        <apex:outputpanel rendered="{!visible}">
            
            <div class="panel-body">

                <div class="clearfix">

                    <h4 class="pull-left">
                        <small>
                            <em>
                                <apex:outputText escape="false" rendered="{!headerText != null}">{!headerText}</apex:outputText>
                            </em>
                        </small>    
                    </h4>

                    <nav class="pull-right">
                        <apex:outputPanel styleClass="paginator" layout="block" rendered="{!(pagerPosition == 'top' || pagerPosition == 'both') && total_size > list_size}">
                            <ul class="pagination">
                                <li class="{!IF(disablePrevious, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disablePrevious, 'void(0)', 'Beginning()')}"><span class="glyphicon glyphicon-step-backward small"></span></a></li>
                                <li class="{!IF(disablePrevious, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disablePrevious, 'void(0)', 'Previous()')}">«</a></li>
                                <li style="display:{!IF(disablePreviousPageButtons, 'none', '')}"><a href="javascript:{!onStart}(); Page('....')">....</a></li>
                                <apex:repeat value="{!paging_buttons}" var="page">
                                    <li class="{!IF(page == currentPage, 'active', '')}"><a  href="javascript:{!onStart}(); Page('{!page}')">{!page}</a></li>
                                </apex:repeat>
                                <li style="display:{!IF(disableNextPageButtons, 'none', '')}"><a href="javascript:{!onStart}(); Page('...')">...</a></li>
                                <li class="{!IF(disableNext, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disableNext, 'void(0)', 'Next()')}">»</a></li>
                                <li class="{!IF(disableNext, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disableNext, 'void(0)', 'End()')}"><span class="glyphicon glyphicon-step-forward small"></span></a></li>
                            </ul> 
                        </apex:outputPanel>      
                    </nav>

                </div> 

                <div class="table-responsive">   
                    <table id="{!Id}" class="{!styleClass}" >
                        <thead>
                            <tr>
                                <apex:Repeat value="{!column_names}" var="column">
                                    <apex:outputpanel layout="none" rendered="{!columns[column]['sort-by'] != 'false'}">
                                        <th style="width:{!columns[column]['width']}; text-align:center;" class="sortable {!IF(sort_column == column, 'sorted', '')} {!IF(sort_order == 'DESC' && sort_column == column, 'sorted-down', IF(sort_column == column, 'sorted-up', ''))} {!columns[column]['header-class']}" onclick="{!onStart}(); Sort('{!column}')">{!columns[column]['title']}</th>
                                    </apex:outputpanel>
                                    <apex:outputpanel layout="none" rendered="{!columns[column]['sort-by'] == 'false'}">
                                        <th style="width:{!columns[column]['width']}; text-align:center;" class="not-sortable {!columns[column]['header-class']}">{!columns[column]['title']}</th>
                                    </apex:outputpanel>
                                </apex:Repeat>
                            </tr>
                        </thead>
                        <tbody>
                            <apex:Repeat value="{!table_rows}" var="row_number">
                                <tr>
                                    <apex:Repeat value="{!table_rows[row_number]}" var="value">
                                        <td>
                                           <apex:outputText escape="false" value="{!value}" />  
                                        </td>
                                    </apex:Repeat>   
                                </tr>
                            </apex:Repeat>   
                        </tbody>
                        <tfoot>
                            <tr>
                                <td colspan="{!totalColumns}">
                                    <apex:outputPanel layout="block" styleClass="text" rendered="{!footerText != null}">
                                        <apex:outputText escape="false">{!footerText}</apex:outputText>
                                    </apex:outputPanel>
                                     <apex:outputPanel styleClass="paginator"  layout="block" rendered="{!(pagerPosition == 'bottom' || pagerPosition == 'both') && total_size > list_size }">
                                          <ul class="pagination">
                                            <li class="{!IF(disablePrevious, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disablePrevious, 'void(0)', 'Beginning()')}"><span class="glyphicon glyphicon-step-backward small"></span></a></li>
                                            <li class="{!IF(disablePrevious, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disablePrevious, 'void(0)', 'Previous()')}">«</a></li>
                                            <li style="display:{!IF(disablePreviousPageButtons, 'none', '')}"><a href="javascript:{!onStart}(); Page('....')">....</a></li>
                                            <apex:repeat value="{!paging_buttons}" var="page">
                                                <li class="{!IF(page == currentPage, 'active', '')}"><a  href="javascript:{!onStart}(); Page('{!page}')">{!page}</a></li>
                                            </apex:repeat>
                                            <li style="display:{!IF(disableNextPageButtons, 'none', '')}"><a href="javascript:{!onStart}(); Page('...')">...</a></li>
                                            <li class="{!IF(disableNext, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disableNext, 'void(0)', 'Next()')}">»</a></li>
                                            <li class="{!IF(disableNext, 'disabled', '')}"><a href="javascript:{!onStart}(); {!IF(disableNext, 'void(0)', 'End()')}"><span class="glyphicon glyphicon-step-forward small"></span></a></li>
                                        </ul> 
                                   </apex:outputPanel>        
                                </td>
                            </tr>
                        </tfoot>
                    </table>
                </div>
            </div>
               
        </apex:outputpanel>
        <apex:outputPanel rendered="{!AND(NOT(visible), NOT(isSearch))}">
            <div class="panel-body">
                <div class="clearfix">
                    <h4 style="text-align:center;">
                        <apex:outputText escape="false">{!$Label.LV_SO_NoSearchPerformed}</apex:outputText>
                    </h4>
                </div>
            </div>
        </apex:outputPanel>
        <apex:outputPanel rendered="{!AND(NOT(visible), isSearch)}">
            <div class="panel-body">
                <div class="clearfix">
                    <h4 style="text-align:center;">
                        <apex:outputText escape="false">{!$Label.LV_SO_NoResultsFound}</apex:outputText>
                    </h4>
                </div>
            </div>
        </apex:outputPanel>
    </apex:outputpanel>
    
    <apex:actionFunction name="End" action="{!End}" rerender="table_panel" onComplete="{!onComplete}()" />
    <apex:actionFunction name="Beginning" action="{!Beginning}" rerender="table_panel" onComplete="{!onComplete}()" />
    <apex:actionFunction name="Previous" action="{!Previous}" rerender="table_panel" onComplete="{!onComplete}()" />
    <apex:actionFunction name="Next" action="{!Next}" rerender="table_panel" onComplete="{!onComplete}()" />
    <apex:actionFunction name="Page" action="{!Page}" rerender="table_panel" onComplete="{!onComplete}()" >
        <apex:param name="page_number" value=""/>  
    </apex:actionFunction>
    <apex:actionFunction name="Sort" action="{!Sort}" rerender="table_panel" onComplete="{!onComplete}()" >
        <apex:param name="column" value=""/>  
    </apex:actionFunction>
    <apex:actionFunction name="{!refreshTable}" action="{!Refresh}" rerender="table_panel" onComplete="{!onComplete}()" />
    
</apex:component>