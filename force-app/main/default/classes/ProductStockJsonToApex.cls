//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class ProductStockJsonToApex {

	public LVResponse LVResponse {get;set;} 

	public ProductStockJsonToApex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'LVResponse') {
						LVResponse = new LVResponse(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'ProductStockJsonToApex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class ItemList {
		public String itemCode {get;set;} 
		public List<BucketList> bucketList {get;set;} 

		public ItemList(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'itemCode') {
							itemCode = parser.getText();
						} else if (text == 'bucketList') {
							bucketList = arrayOfBucketList(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'ItemList consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class LVResponse {
		public Data data {get;set;} 

		public LVResponse(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'data') {
							data = new Data(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'LVResponse consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class StoreList {
		public String storeCode {get;set;} 
		public List<ItemList> itemList {get;set;} 

		public StoreList(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'storeCode') {
							storeCode = parser.getText();
						} else if (text == 'itemList') {
							itemList = arrayOfItemList(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'StoreList consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		public List<StoreList> storeList {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'storeList') {
							storeList = arrayOfStoreList(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class LocationList {
		public String locationID {get;set;} 
		public String quantity {get;set;} 

		public LocationList(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'locationID') {
							locationID = parser.getText();
						} else if (text == 'quantity') {
							quantity = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'LocationList consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class BucketList {
		public String bucketID {get;set;} 
		public String totalQuantity {get;set;} 
		public List<LocationList> locationList {get;set;} 

		public BucketList(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'bucketID') {
							bucketID = parser.getText();
						} else if (text == 'totalQuantity') {
							totalQuantity = parser.getText();
						} else if (text == 'locationList') {
							locationList = arrayOfLocationList(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'BucketList consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
		
	public static ProductStockJsonToApex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new ProductStockJsonToApex(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	
    private static List<LocationList> arrayOfLocationList(System.JSONParser p) {
        List<LocationList> res = new List<LocationList>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new LocationList(p));
        }
        return res;
    }

    private static List<BucketList> arrayOfBucketList(System.JSONParser p) {
        List<BucketList> res = new List<BucketList>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new BucketList(p));
        }
        return res;
    }

    private static List<ItemList> arrayOfItemList(System.JSONParser p) {
        List<ItemList> res = new List<ItemList>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new ItemList(p));
        }
        return res;
    }

    private static List<StoreList> arrayOfStoreList(System.JSONParser p) {
        List<StoreList> res = new List<StoreList>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new StoreList(p));
        }
        return res;
    }
}