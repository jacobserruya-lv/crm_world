//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class ProductPriceJsonToApex {

	/*public class ItemPrices {
		public String item {get;set;} 
		public String price {get;set;} 
		public String currency_price {get;set;} 
		public String factor {get;set;} 

		public ItemPrices(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'item') {
							item = parser.getText();
						} else if (text == 'price') {
							price = parser.getText();
						} else if (text == 'currency_price' || text == 'currency') {
							currency_price = parser.getText();
						} else if (text == 'factor') {
							factor = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'ItemPrices consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public LVResponse LVResponse {get;set;} 

	public ProductPriceJsonToApex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'LVResponse') {
						LVResponse = new LVResponse(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'ProductPriceJsonToApex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class LVResponse {
		public Data data {get;set;} 

		public LVResponse(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'data') {
							data = new Data(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'LVResponse consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		public List<ItemPrices> itemPrices {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'itemPrices') {
							itemPrices = arrayOfItemPrices(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static ProductPriceJsonToApex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new ProductPriceJsonToApex(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<ItemPrices> arrayOfItemPrices(System.JSONParser p) {
        List<ItemPrices> res = new List<ItemPrices>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new ItemPrices(p));
        }
        return res;
    }




}*/

//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//


	public class ItemPrices {
		public String countryCode {get;set;}
		public List<ItemList> itemList {get;set;}

		public ItemPrices(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'countryCode') {
							countryCode = parser.getText();
						} else if (text == 'itemList') {
							itemList = arrayOfItemList(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'ItemPrices consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public LVResponse LVResponse {get;set;}

	public ProductPriceJsonToApex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'LVResponse') {
						LVResponse = new LVResponse(parser);
					} else {
						System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}

	public class ItemList {
		public String item {get;set;}
		public String price {get;set;}
		public String currencyCode {get;set;}
		public String factor {get;set;}
		public String tariffType {get;set;}

		public ItemList(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'item') {
							item = parser.getText();
						} else if (text == 'price') {
							price = parser.getText();
						} else if (text == 'currencyCode') {
							currencyCode = parser.getText();
						} else if (text == 'factor') {
							factor = parser.getText();
						} else if (text == 'tariffType') {
							tariffType = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'ItemList consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class LVResponse {
		public Data data {get;set;}

		public LVResponse(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'data') {
							data = new Data(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'LVResponse consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}

	public class Data {
		public List<ItemPrices> itemPrices {get;set;}

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'itemPrices') {
							itemPrices = arrayOfItemPrices(parser);
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}


	public static ProductPriceJsonToApex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new ProductPriceJsonToApex(parser);
	}

	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT ||
							curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
							curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}


	private static List<ItemPrices> arrayOfItemPrices(System.JSONParser p) {
		List<ItemPrices> res = new List<ItemPrices>();
		if (p.getCurrentToken() == null) p.nextToken();
		while (p.nextToken() != System.JSONToken.END_ARRAY) {
			res.add(new ItemPrices(p));
		}
		return res;
	}





	private static List<ItemList> arrayOfItemList(System.JSONParser p) {
		List<ItemList> res = new List<ItemList>();
		if (p.getCurrentToken() == null) p.nextToken();
		while (p.nextToken() != System.JSONToken.END_ARRAY) {
			res.add(new ItemList(p));
		}
		return res;
	}




}