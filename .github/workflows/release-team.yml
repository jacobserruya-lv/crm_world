name: Release Team
run-name: ${{ github.actor }} is launching | Release Team ðŸššðŸ“¦

on:
  workflow_dispatch:
    inputs:
      source:
        description: 'The source branch'
        required: true
      target:
        description: 'The target branch'
        required: true 
      team:
        description: 'The team`s folder'
        required: true
      release_branch:
        description: 'The name of the release branch to create'
        required: true

    
jobs:

  check-authorization:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
    - name: Check if user is authorized
      run: |
        AUTHORIZED_USERS=(${{ vars.RELEASE_MANAGERS }}) # Reference the variable here
        if [[ ! " ${AUTHORIZED_USERS[@]} " =~ " ${GITHUB_ACTOR} " ]]; then
          echo "You are not authorized to run this workflow."
          exit 1
        else
          echo "User ${GITHUB_ACTOR} is authorized."
        fi

  create-release-branch:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        repository: LouisVuitton/crm_world
        token: ${{ secrets.PAT_SF }}
        clean: true

    - name: Set up Git
      run: |
        git config --global user.name 'Release Manager'
        git config --global user.email 'Release-Manager@github.com'
        git remote set-url origin https://x-access-token:${{ secrets.PAT_SF }}@github.com/LouisVuitton/crm_world.git
        echo "Configured Git remote to: $(git remote get-url origin)"
          
    - name: Fetch all branches and checkout target branch
      run: |
        TARGET_BRANCH="${{ github.event.inputs.target }}"
        git fetch --all
        git checkout $TARGET_BRANCH
        
    - name: Create new release branch from target branch
      run: |
        # Inputs
        RELEASE_BRANCH="${{ github.event.inputs.release_branch }}"
        
        # Create and switch to the new release branch
        git checkout -b $RELEASE_BRANCH

    - name: Checkout the specified team from the source branch
      run: |
        # Inputs
        TEAM="${{ github.event.inputs.team }}"
        SOURCE_BRANCH="${{ github.event.inputs.source }}" # Use the new source input
        RELEASE_BRANCH="${{ github.event.inputs.release_branch }}"

        # Fetch the source branch
        git fetch origin $SOURCE_BRANCH
        echo "Folder: $TEAM"
        echo "Source Branch: $SOURCE_BRANCH"
        echo "Release Branch: $RELEASE_BRANCH"

        # Checkout the specified team from the source branch into the release branch
        git checkout origin/$SOURCE_BRANCH -- $TEAM
        
        # Stage and commit the changes
        git add $TEAM
        git commit -m "Added $TEAM from $SOURCE_BRANCH to $RELEASE_BRANCH"

    - name: Push changes to the release branch
      run: |
        # Push the new release branch to the repository
        git push --set-upstream origin ${{ github.event.inputs.release_branch }}
