name: DEV
run-name: ${{ github.actor }} is launching | DEV  ðŸš€

on:
  pull_request:
    types:
      - opened
      - reopened
      - closed
    branches:
      - 'DEV'
      
  workflow_dispatch:

jobs:
  Dev:
    runs-on: compose-self-hosted
    environment: DEV
    
    outputs:
      TAG_NAME: ${{ steps.vars.outputs.tag-name }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: Install dependencies
        run: npm install 

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      - name: Authenticate with Salesforce Org
        run: |  
          echo "force://${{ vars.CONSUMER_KEY }}::${{ vars.REFRESH_TOKEN}}@${{ vars.INSTANCE_URL}}" > ./SFDX_URL.txt                       
          sfdx force:auth:sfdxurl:store -f ./SFDX_URL.txt --setalias ${{ vars.ALIAS}} --setdefaultusername

      - name: Generate DELTA
        if: ${{ github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        run: | 
          node sf-delta/index.js --projectPath sfoa --baseBranch ${{ vars.TARGET_DIFF }}
          node sf-delta/index.js --projectPath force-app --baseBranch  ${{ vars.TARGET_DIFF }}

      - name: Validate to Salesforce (Check Only)
        if: ${{ github.event_name == 'pull_request' && (github.event.action == 'opened' || github.event.action == 'reopened') }}
        run: |
          if [ -f "delta/main/default/package.xml" ]; then
            sfdx force:source:deploy --sourcepath delta/main/default --checkonly --targetusername ${{ vars.ALIAS}} --verbose
          else
            echo "The DELTA does not exist. Nothing to deploy"
          fi

      - name: Deploy to Salesforce
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}
        run: |
          if [ -f "delta/main/default/package.xml" ]; then
            # sfdx force:source:deploy --sourcepath delta/main/default --targetusername ${{ vars.ALIAS}} --verbose
            echo "Nothing to deploy for now"
          else
            echo "The DELTA does not exist. Nothing to deploy"
          fi

